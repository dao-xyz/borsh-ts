on:
  push:
    branches:
      - master
    paths:
      - packages/**
      - .release-please-manifest.json
      - release-please-config.json
permissions:
  contents: write
  pull-requests: write

name: Run Release Please
jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          default-branch: master
          manifest-file: .release-please-manifest.json
          config-file: release-please-config.json

      # The logic below handles the npm publication:
      - name: Checkout Repository
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ensure tags/commits are available for tooling like lerna
      - name: Setup Node
        uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        with:
          node-version: lts/*
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install deps
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          yarn

      - name: Build Packages
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: |
          yarn
          yarn build

      # Release Please has already incremented versions and published tags, so we just
      # need to publish all unpublished versions to NPM here
      # See: https://github.com/lerna/lerna/tree/main/commands/publish#bump-from-package
      - name: Publish to NPM
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: npx lerna publish from-package --yes
